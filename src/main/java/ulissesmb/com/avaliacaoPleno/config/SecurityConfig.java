package ulissesmb.com.avaliacaoPleno.config;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.context.annotation.Configuration;import org.springframework.http.HttpMethod;import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;import org.springframework.security.config.annotation.method.configuration.EnableGlobalMethodSecurity;import org.springframework.security.config.annotation.web.builders.HttpSecurity;import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;import ulissesmb.com.avaliacaoPleno.service.CustomUserDetailService;/* * @author ulissesmb * */@Configuration@EnableWebSecurity@EnableGlobalMethodSecurity(        securedEnabled = true,        jsr250Enabled = true,        prePostEnabled = true)public class SecurityConfig extends WebSecurityConfigurerAdapter {    @Autowired    private CustomUserDetailService customUserDetailService;    @Override    protected void configure(HttpSecurity http) throws Exception {        http.authorizeRequests()                .anyRequest().authenticated()                .and()                .httpBasic()        .and()        .csrf().disable().authorizeRequests()                .antMatchers(                        HttpMethod.GET,                        "/index*", "/static/**", "/*.js", "/*.json", "/*.ico")                .permitAll();    }    @Override    protected void configure(AuthenticationManagerBuilder auth) throws Exception {        auth.userDetailsService(customUserDetailService).passwordEncoder(new BCryptPasswordEncoder());    }}