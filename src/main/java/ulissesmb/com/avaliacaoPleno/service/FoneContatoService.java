package ulissesmb.com.avaliacaoPleno.service;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.stereotype.Service;import ulissesmb.com.avaliacaoPleno.domain.modelo.Cliente;import ulissesmb.com.avaliacaoPleno.domain.modelo.FoneContato;import ulissesmb.com.avaliacaoPleno.reposity.IClienteRepository;import ulissesmb.com.avaliacaoPleno.reposity.IFoneContatosRepository;import java.util.ArrayList;import java.util.List;import java.util.Optional;import java.util.Set;@Servicepublic class FoneContatoService {    @Autowired    private IFoneContatosRepository foneContatosRepository;    @Autowired    private IClienteRepository clienteRepository;    public List<FoneContato> listarTodos() {        List<FoneContato> contatos = new ArrayList<>();        foneContatosRepository.findAll().forEach(contato -> {            contatos.add(contato);        });        return contatos;    }    public FoneContato save(FoneContato object) {        Optional<Cliente> byId = clienteRepository.findById(object.getCliente().getId());        if (byId.isPresent()) {            Cliente cliente = byId.get();            Set<FoneContato> contatos = cliente.getContatos();            object.setCliente(cliente);            contatos.add(object);            cliente.setContatos(contatos);            return foneContatosRepository.save(object);        }        return null;    }    public List<FoneContato> buscarContatoPorCliente(Long idCliente) {        List<FoneContato> contatos = new ArrayList<>();        foneContatosRepository.findByCliente(clienteRepository.findById(idCliente).get()).forEach(contatos::add);        return contatos;    }    public Optional<FoneContato> buscarPorId(Long id) {        return foneContatosRepository.findById(id);    }    public void delete(Long id) {        foneContatosRepository.deleteById(id);    }}