package ulissesmb.com.avaliacaoPleno.service;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.AuthorityUtils;import org.springframework.security.core.userdetails.User;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.stereotype.Component;import org.springframework.stereotype.Service;import ulissesmb.com.avaliacaoPleno.domain.modelo.Usuario;import ulissesmb.com.avaliacaoPleno.exception.ResourceNotFoundException;import ulissesmb.com.avaliacaoPleno.reposity.IUsuarioRepository;import ulissesmb.com.avaliacaoPleno.security.UserPrincipal;import javax.transaction.Transactional;import java.util.List;import java.util.Optional;@Servicepublic class CustomUserDetailService implements UserDetailsService {    @Autowired    private final IUsuarioRepository usuarioRepositorio;    @Autowired    public CustomUserDetailService(IUsuarioRepository usuarioRepositorio) {        this.usuarioRepositorio = usuarioRepositorio;    }    @Override    public UserDetails loadUserByUsername(String login) throws UsernameNotFoundException {        Usuario usuario = Optional.of(usuarioRepositorio.findByLogin(login))                .orElseThrow(() -> new UsernameNotFoundException("Usuario nÃ£o encontrado."));        return UserPrincipal.create(usuario);    }    @Transactional    public UserDetails loadUserById(Long id) {        Usuario user = usuarioRepositorio.findById(id).orElseThrow(                () -> new ResourceNotFoundException("Usuario", "id", id)        );        return UserPrincipal.create(user);    }}