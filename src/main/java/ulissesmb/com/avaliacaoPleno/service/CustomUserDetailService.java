package ulissesmb.com.avaliacaoPleno.service;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.security.core.GrantedAuthority;import org.springframework.security.core.authority.AuthorityUtils;import org.springframework.security.core.userdetails.User;import org.springframework.security.core.userdetails.UserDetails;import org.springframework.security.core.userdetails.UserDetailsService;import org.springframework.security.core.userdetails.UsernameNotFoundException;import org.springframework.stereotype.Component;import ulissesmb.com.avaliacaoPleno.domain.modelo.Usuario;import ulissesmb.com.avaliacaoPleno.reposity.IUsuarioRepository;import java.util.List;import java.util.Optional;@Componentpublic class CustomUserDetailService implements UserDetailsService {    @Autowired    private final IUsuarioRepository usuarioRepositorio;    @Autowired    public CustomUserDetailService(IUsuarioRepository usuarioRepositorio) {        this.usuarioRepositorio = usuarioRepositorio;    }    @Override    public UserDetails loadUserByUsername(String login) throws UsernameNotFoundException {        Usuario usuario = Optional.of(usuarioRepositorio.findByLogin(login))                .orElseThrow(() -> new UsernameNotFoundException("Usuario n√£o encontrado."));        List<GrantedAuthority> authorityListAdmin = AuthorityUtils.createAuthorityList("ROLE_USER", "ROLE_ADMIN");        List<GrantedAuthority> authorityListComum = AuthorityUtils.createAuthorityList("ROLE_USER");        return new User(usuario.getLogin(), usuario.getSenha(), usuario.getAdmin() ? authorityListAdmin : authorityListComum);    }}