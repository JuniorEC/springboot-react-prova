package ulissesmb.com.avaliacaoPleno.endpoint;import org.springframework.beans.factory.annotation.Autowired;import org.springframework.http.HttpStatus;import org.springframework.http.ResponseEntity;import org.springframework.web.bind.annotation.*;import ulissesmb.com.avaliacaoPleno.domain.modelo.Cliente;import ulissesmb.com.avaliacaoPleno.error.CustomErrorResponse;import ulissesmb.com.avaliacaoPleno.security.CurrentUser;import ulissesmb.com.avaliacaoPleno.security.UserPrincipal;import ulissesmb.com.avaliacaoPleno.service.ClienteService;@RestController@RequestMapping("api/clientes")public class ClienteEndPoint {    @Autowired    private ClienteService clienteService;    @GetMapping    public ResponseEntity<?> listarTodos(@CurrentUser UserPrincipal currentUser) {        return new ResponseEntity<>( clienteService.listarTodos(), HttpStatus.OK);    }    @GetMapping(path = "/{id}")    public ResponseEntity<?> getClienteById(@CurrentUser UserPrincipal currentUser, @PathVariable Long id) {        Cliente cliente =  clienteService.buscarPorId(id).get();        if(cliente != null)            return new ResponseEntity<>(cliente, HttpStatus.OK);        return new ResponseEntity<>(new CustomErrorResponse("Cliente n√£o localizado") ,HttpStatus.NOT_FOUND);    }    @PostMapping    public ResponseEntity<?> save(@CurrentUser UserPrincipal currentUser, @RequestBody Cliente cliente) {        return new ResponseEntity<>(clienteService.save(cliente), HttpStatus.OK);    }    @DeleteMapping(path = "/{id}")    public ResponseEntity<?> delete(@CurrentUser UserPrincipal currentUser, @PathVariable Long id) {        clienteService.delete(id);        return new ResponseEntity<>(HttpStatus.OK);    }    @PutMapping    public ResponseEntity<?> update(@CurrentUser UserPrincipal currentUser, @RequestBody Cliente cliente) {        Cliente update = clienteService.save(cliente);        if(update != null)            return new ResponseEntity<>(update, HttpStatus.OK);        return new ResponseEntity<>(HttpStatus.BAD_REQUEST);    }}