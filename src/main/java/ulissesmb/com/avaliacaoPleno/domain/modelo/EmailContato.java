package ulissesmb.com.avaliacaoPleno.domain.modelo;import com.fasterxml.jackson.annotation.JsonIgnore;import javax.persistence.*;import java.io.Serializable;import java.util.Objects;@Entity@Table(name = "TP_EMAIL_CONTATO")public class EmailContato implements Serializable {    private static final long serialVersionUID = -8012419093853687385L;    @Id    @GeneratedValue(strategy = GenerationType.IDENTITY)    private Long id;    @Column(name = "email")    private String email;    @ManyToOne(fetch = FetchType.LAZY)    @JoinColumn(name = "ID_CLIENTE", nullable = false, foreignKey=@ForeignKey(name="FK_EMAIL_CONT_TO_CLIENTE"))    @JsonIgnore    private Cliente cliente;    public EmailContato() {    }    public EmailContato(String email) {        this.email = email;    }    public Long getId() {        return id;    }    public void setId(Long id) {        this.id = id;    }    public String getEmail() {        return email;    }    public void setEmail(String email) {        this.email = email;    }    public Cliente getCliente() {        return cliente;    }    public void setCliente(Cliente cliente) {        this.cliente = cliente;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        EmailContato that = (EmailContato) o;        return id.equals(that.id) &&                email.equals(that.email);    }    @Override    public int hashCode() {        return Objects.hash(id, email);    }    @Override    public String toString() {        final StringBuilder sb = new StringBuilder("EmailContato{");        sb.append("id=").append(id);        sb.append(", email='").append(email).append('\'');        sb.append('}');        return sb.toString();    }}