package ulissesmb.com.avaliacaoPleno.domain.modelo;import javax.persistence.*;import javax.validation.constraints.Min;import javax.validation.constraints.NotNull;import javax.validation.constraints.Size;import java.io.Serializable;import java.util.HashSet;import java.util.Objects;import java.util.Set;@Entity@Table(name = "TP_CLIENTE")@SequenceGenerator(name = "SEQ_CLIENTE", sequenceName = "SEQ_CLIENTE", initialValue = 1, allocationSize = 1)public class Cliente implements Serializable {    private static final long serialVersionUID = -5558976061091183754L;    @Id    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "SEQ_CLIENTE")    private Long id;    @NotNull    @Size(min = 3, max = 100)    private String nome;    @NotNull    private String cpf;    private String cep;    private String logradouro;    private String bairro;    private String uf;    private String cidade;    private String complemento;    @OneToMany(mappedBy = "cliente", orphanRemoval = true, cascade = CascadeType.ALL, fetch = FetchType.LAZY)    private Set<FoneContato> contatos = new HashSet<>();    @OneToMany(mappedBy = "cliente", orphanRemoval = true, cascade = CascadeType.ALL, fetch = FetchType.LAZY)    private Set<EmailContato> emails = new HashSet<EmailContato>();    public Cliente() {        super();    }    public Cliente(@NotNull @Min(3) String nome, @NotNull String cpf, String cep, String logradouro, String bairro, String uf, String cidade) {        this.nome = nome;        this.cpf = cpf;        this.cep = cep;        this.logradouro = logradouro;        this.bairro = bairro;        this.uf = uf;        this.cidade = cidade;    }    public Cliente(Cliente cliente) {        this.nome = cliente.nome;        this.cpf = cliente.cpf;        this.cep = cliente.cep;        this.logradouro = cliente.logradouro;        this.bairro = cliente.bairro;        this.uf = cliente.uf;        this.cidade = cliente.cidade;    }    public Cliente(@NotNull @Size(min = 3, max = 100) String nome, @NotNull String cpf, String cep, String logradouro, String bairro, String uf, String cidade, String complemento, Set<FoneContato> contatos, Set<EmailContato> emails) {        this.nome = nome;        this.cpf = cpf;        this.cep = cep;        this.logradouro = logradouro;        this.bairro = bairro;        this.uf = uf;        this.cidade = cidade;        this.complemento = complemento;        this.contatos = contatos;        this.emails = emails;    }    public Long getId() {        return id;    }    public void setId(Long id) {        this.id = id;    }    public String getNome() {        return nome;    }    public void setNome(String nome) {        this.nome = nome;    }    public String getCpf() {        return cpf;    }    public void setCpf(String cpf) {        this.cpf = cpf;    }    public String getCep() {        return cep;    }    public void setCep(String cep) {        this.cep = cep;    }    public String getLogradouro() {        return logradouro;    }    public void setLogradouro(String logradouro) {        this.logradouro = logradouro;    }    public String getBairro() {        return bairro;    }    public void setBairro(String bairro) {        this.bairro = bairro;    }    public String getUf() {        return uf;    }    public void setUf(String uf) {        this.uf = uf;    }    public String getCidade() {        return cidade;    }    public void setCidade(String cidade) {        this.cidade = cidade;    }    public Set<FoneContato> getContatos() {        return contatos;    }    public void setContatos(Set<FoneContato> contatos) {        this.contatos = contatos;    }    public Set<EmailContato> getEmails() {        return emails;    }    public void setEmails(Set<EmailContato> emails) {        this.emails = emails;    }    public String getComplemento() {        return complemento;    }    public void setComplemento(String complemento) {        this.complemento = complemento;    }    @Override    public boolean equals(Object o) {        if (this == o) return true;        if (o == null || getClass() != o.getClass()) return false;        Cliente cliente = (Cliente) o;        return id.equals(cliente.id) &&                nome.equals(cliente.nome) &&                cpf.equals(cliente.cpf) &&                cep.equals(cliente.cep) &&                logradouro.equals(cliente.logradouro) &&                bairro.equals(cliente.bairro) &&                uf.equals(cliente.uf) &&                cidade.equals(cliente.cidade) &&                contatos.equals(cliente.contatos) &&                emails.equals(cliente.emails);    }    @Override    public int hashCode() {        return Objects.hash(id, nome, cpf, cep, logradouro, bairro, uf, cidade, contatos, emails);    }    @Override    public String toString() {        final StringBuilder sb = new StringBuilder("Cliente{");        sb.append("id=").append(id);        sb.append(", nome='").append(nome).append('\'');        sb.append(", cpf='").append(cpf).append('\'');        sb.append(", cep='").append(cep).append('\'');        sb.append(", logradouro='").append(logradouro).append('\'');        sb.append(", bairro='").append(bairro).append('\'');        sb.append(", uf='").append(uf).append('\'');        sb.append(", cidade='").append(cidade).append('\'');        sb.append('}');        return sb.toString();    }}